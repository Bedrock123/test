# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2017-01-06 15:09
from __future__ import unicode_literals

import HarperUser.models
import django.core.validators
from django.db import migrations, models
import re
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, help_text='Required. 255 characters or fewer. Letters, numbers and @/./+/-/_ characters', max_length=255, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'Enter a valid username.', 'invalid')], verbose_name='Username')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=60, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=60, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=60, verbose_name='Last Name')),
                ('access_level', models.CharField(blank=True, choices=[('4', 'Owner'), ('3', 'Manager'), ('2', 'Staff'), ('1', 'Member')], default=None, help_text='Used only in the club site, not in the admin panel.', max_length=120, null=True, verbose_name='Access Level')),
                ('profile_image', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=HarperUser.models.upload_profile_location, verbose_name='Profile Image')),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Image PPOI')),
                ('phone_numner', models.CharField(blank=True, max_length=60, verbose_name='Phone Number')),
                ('e_contact_full_name', models.CharField(blank=True, max_length=60, verbose_name='Emergency Contact Full Name')),
                ('e_contact_phone_number', models.CharField(blank=True, max_length=60, verbose_name='Emergency Contact Phone Number')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active User')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff User')),
                ('flagged', models.IntegerField(default=0, verbose_name='Flagged Count')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], default='', max_length=120, verbose_name='Gender')),
                ('suffix', models.CharField(blank=True, choices=[('CPA', 'CPA'), ('Esq', 'Esq.'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('JD', 'JD'), ('Jr.', 'Jr.'), ('M.D.', 'M.D.'), ('Ph. D.', 'Ph. D.'), ('Sr.', 'Sr.'), ('USA', 'USA'), ('USAF', 'USAF'), ('USAFR', 'USAFR'), ('USAR', 'USAR'), ('USCG', 'USCG'), ('USMC', 'USMC'), ('USMCR', 'USMCR'), ('USN', 'USN'), ('USNR', 'USNR')], default='', max_length=120, verbose_name='Name Suffix')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
